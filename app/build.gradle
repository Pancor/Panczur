apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-kapt'
apply plugin: 'io.fabric'
apply from: "$project.rootDir/tools/script-git-version.gradle"

android {
    signingConfigs {
        panczur_release {
            keyAlias 'panczur'
            keyPassword 'tatama29lub29'
            storeFile file('D:/Panczur/keystore.jks')
            storePassword 'tatama29lub29'
        }
    }
    compileSdkVersion appConfig.compileSdkVersion
    defaultConfig {
        applicationId appConfig.applicationId
        minSdkVersion appConfig.minSdkVersion
        targetSdkVersion appConfig.targetSdkVersion
        versionCode getVersionCodeApp()
        versionName getVersionNameApp()
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.panczur_release
        }
    }
}

dependencies {
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jre7:$kotlin_version"

    //logs
    implementation "com.jakewharton.timber:timber:$timberVersion"
    implementation("com.crashlytics.sdk.android:crashlytics:$crashlyticsVersion") {
        transitive = true
    }

    //android
    implementation "com.android.support:appcompat-v7:$supportLibraryVersion"
    implementation "com.android.support.constraint:constraint-layout:$constraintLayoutVersion"

    //tests
    testImplementation "junit:junit:$junitVersion"
    androidTestImplementation "com.android.support.test:runner:$testRunnerVersion"
    androidTestImplementation "com.android.support.test.espresso:espresso-core:$espressoVersion"
    testImplementation "org.mockito:mockito-core:$mockitoVersion"
    androidTestImplementation "org.mockito:mockito-android:$mockitoVersion"

    //dagger
    implementation "com.google.dagger:dagger:$daggerVersion"
    implementation "com.google.dagger:dagger-android-support:$daggerVersion"
    kapt "com.google.dagger:dagger-compiler:$daggerVersion"
    kapt "com.google.dagger:dagger-android-processor:$daggerVersion"

    //rx
    implementation "io.reactivex.rxjava2:rxjava:$rxJavaVersion"
    implementation "io.reactivex.rxjava2:rxkotlin:$rxKotlinVersion"
    implementation "io.reactivex.rxjava2:rxandroid:$rxAndroidVersion"

    //firebase
    implementation "com.google.firebase:firebase-core:$firebaseVersion"
}
apply plugin: 'com.google.gms.google-services'